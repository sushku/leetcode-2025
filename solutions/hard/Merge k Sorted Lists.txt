// Title: Merge k Sorted Lists
            // Difficulty: Hard
            // Language: Python3
            // Link: https://leetcode.com/problems/merge-k-sorted-lists/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        for node in lists:
            while node:
        heap = []
                heapq.heappush(heap, HeapNode(node))
                node = node.next
        dummy = ListNode(0)
        while heap:
        prevNode = dummy
            heapNode = heapq.heappop(heap)
            prevNode.next = heapNode.node
            prevNode = heapNode.node
class HeapNode:
    def __init__(self, listNode):
        self.node = listNode

    def __lt__(self, other):
        return self.node.val < other.node.val

            heapNode.node.next = None
        return dummy.next