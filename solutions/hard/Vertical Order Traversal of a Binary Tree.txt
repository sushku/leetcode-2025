// Title: Vertical Order Traversal of a Binary Tree
            // Difficulty: Hard
            // Language: Python3
            // Link: https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
        valList = []
        dq = deque()
        dq.append((0, 0, root))
        while dq:
            row, col, node = dq.popleft()
            valList.append((col, row, node.val))
            if node.left:
                dq.append((row+1, col-1, node.left))
            if node.right:
                dq.append((row+1, col+1, node.right))
        valList.sort()
        res = []
        colVals = []
        prevCol = None
        for item in valList:
            if prevCol != None and prevCol != item[0]:
                res.append(colVals.copy())
                colVals = []
            colVals.append(item[2])
            prevCol = item[0]
        if colVals:
            res.append(colVals)
        return res