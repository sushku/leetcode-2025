// Title: Diameter of Binary Tree
            // Difficulty: Easy
            // Language: Python3
            // Link: https://leetcode.com/problems/diameter-of-binary-tree/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        maxLength = 0
        def longestPath(node):
            nonlocal maxLength
            if not node:
                return -1
            leftPath = 1 + longestPath(node.left)
            rightPath = 1 + longestPath(node.right)
            maxLength = max(maxLength, leftPath + rightPath)
            return max(leftPath, rightPath)
        longestPath(root)
        # Approach: DFS
        # Time: O(n)
        # Space: O(n)
        return maxLength