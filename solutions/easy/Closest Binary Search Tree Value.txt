// Title: Closest Binary Search Tree Value
            // Difficulty: Easy
            // Language: Python3
            // Link: https://leetcode.com/problems/closest-binary-search-tree-value/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def closestValue(self, root: Optional[TreeNode], target: float) -> int:
        def dfs(node):
        valList = []
            nonlocal valList
            dfs(node.left)
            valList.append(node.val)
            if not node:
                return
            dfs(node.right)
        dfs(root)
        left, right = 0, len(valList) - 1
        while left < right:
            mid = (left + right) // 2
            if valList[mid] == target:
                return valList[mid]
            elif valList[mid] < target:
                left = mid + 1
            else:
                right = mid
            if target - valList[left-1] <= valList[left] - target:
                return valList[left-1]
            else:
        if left > 0:
                return valList[left]
        else:
            return valList[left]