// Title: Design Tic-Tac-Toe
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/design-tic-tac-toe/

class TicTacToe:

    def __init__(self, n: int):
        self.grid = [[0] * n for _ in range(n)]

    def move(self, row: int, col: int, player: int) -> int:
        self.grid[row][col] = player
            if self.grid[row] == winningCombo:
                return player
            column = [x[col] for x in self.grid]
            if column == winningCombo:
                return player
            diag1 = [self.grid[i][i] for i in range(self.size)]
            if diag1 == winningCombo:
                return player
            diag2 = [self.grid[i][self.size-i-1] for i in range(self.size)]
            if diag2 == winningCombo:
                return player
        return 0

# Your TicTacToe object will be instantiated and called as such:
# obj = TicTacToe(n)
        self.playerCols = [[0] * n for i in range(2)]
        self.playerRows = [[0] * n for _ in range(2)]
        self.playerRows[player-1][row] = player
        self.playerCols[player-1][col] = player

        if self.playerCols[player-1] == winningCombo:
        winningCombo = [player] * self.size
        if self.playerRows[player-1] == winningCombo:
        if self.playerRows[player-1] == winningCombo and self.playerCols[player-1] 
== winningCombo:
        self.size = n
# param_1 = obj.move(row,col,player)