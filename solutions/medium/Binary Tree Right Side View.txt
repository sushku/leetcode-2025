// Title: Binary Tree Right Side View
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/binary-tree-right-side-view/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        dq = deque([[0, root]])
        while dq:
            level, node = dq.popleft()
        levels = {}
            if levels.get(level):
                levels[level].append(node.val)
            else:
                levels[level] = [node.val]
                dq.append([level + 1, node.left])
            if node.left:
            if node.right:
            maxLevel = max(maxLevel, level)
        maxLevel = 0
                dq.append([level + 1, node.right])
        for i in range(maxLevel + 1):
        res = []
            res.append(levels[i][-1])
        if not root:
            return []
        return res